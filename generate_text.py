import sys
import tensorflow as tf
import numpy as np
def sample(preds, vocab_size, temperature=1.0):
    preds = np.asarray(preds).astype('float64')
    preds = np.log(preds) / temperature
    exp_preds = np.exp(preds)
    preds = exp_preds / np.sum(exp_preds)
    probas = np.random.multinomial(1, preds, 1)
    out = np.random.choice(range(vocab_size), p = probas.ravel())
    return out

def generate_txt(model,start_text,char2idx,idx2char,vocab_size,
                 seq_length=50,num_chars =1000):
    '''
    Generate the text from the trained model
    model - trained model
    start_text - First few characters in the text to be generated
    char2idx,idx2char - mapping from letters to intgers and viceversa
    vocab_size - unique characters in the training text
    '''
    
    print('\n\n*****Text generated by model****\n\n') 
    string=start_text
    sys.stdout.write(string)
    for i in range(num_chars):
        if len(string)>seq_length:
            string=string[1:]
        x=np.zeros((1,len(string),vocab_size))
        for i,t in enumerate(string):
            x[0,i,char2idx[t]]=1
        predictions = model.predict(x)
        predictions = tf.squeeze(predictions, 0)[-1]
        next_char_index = sample(predictions,vocab_size)
        next_char = idx2char[next_char_index]
        string+=next_char
        sys.stdout.write(next_char)
        sys.stdout.flush()
